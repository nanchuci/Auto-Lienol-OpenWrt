##
#
# ÊÑüË∞¢p3terxÂ§ßÁ•ûÁöÑ‰∏ÄÈîÆÁºñËØëËÑöÊú¨
# 
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
#‰øÆÊîπ‰ª•‰∏ã‰ª£Á†ÅÊàñËÄÖÂºÄÂêØËß¶ÂèëÂºÄÂÖ≥ÈÉΩÂ•ΩÔºåË¶Å‰∏•Ê†ºÊåâÊ†ºÂºèÂØπÂ•Ω,ÂâçÈù¢ÊúâÂ§öÂ∞ëÁ©∫Ê†º‰πüË¶ÅÁúãÊ∏ÖÊ•ö
#‰ª£Á†ÅÈáåÊúâ name: ÂêéÈù¢ÁöÑÂÜÖÂÆπÈöè‰æøÊîπ,ÂÜíÂè∑ÂêéÈù¢ÊòØÊúâ‰∏™Á©∫Ê†ºÁöÑ,Â¶ÇÊûú‰øÆÊîπÂõ∫‰ª∂ÂêçÂ≠óÂ∞±Ë¶ÅËÄÉËôëËÉΩ‰∏çËÉΩÊòæÁ§∫Âá∫‰Ω†ÊÉ≥Ë¶ÅÁöÑ


name: OpenWrt-msg1500 5.15ÂÜÖÊ†∏Âõ∫‰ª∂

on: 
  release:
    types: [published]

#ÁºñËæë‰ªªÊÑèÊåáÂÆöÊñá‰ª∂Ëß¶ÂèëÂºÄÂßãÁºñËØë(ÂéªÊéâ‰∏ãÈù¢5‰∏™#ÂºÄÂêØ,ÊúÄ‰∏ãÈù¢‰∏ÄË°åÊòØÊåáÂÆö‰øÆÊîπ‰ªÄ‰πàÊñá‰ª∂Â∞±Ëß¶ÂèëÁºñËØë,ÊàëÁé∞Âú®ÊòØ‰øÆÊîπdiy.configÊñá‰ª∂Ëß¶Âèë)
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'


#releaseÂèëÂ∏ÉËß¶ÂèëÂºÄÂßãÁºñËØë(Âè™ÊòØ‰∏Ä‰∏™Ëß¶ÂèëÊù°‰ª∂,‰∏ç‰ºöÂèëÂ∏ÉÁöÑ,ÂèàÈ∫ªÁÉ¶,Ê≤°ÂçµÁî®,‰∏çÁî®Á†îÁ©∂)
#  release:
#    types: published


#ÂÆöÊó∂Ëß¶ÂèëÂºÄÂßãÁºñËØë(Êää‰∏ãÈù¢‰∏§‰∏™#ÂéªÊéâÂºÄÂêØ,Êó∂Èó¥ËÆæÁΩÆËØ∑ÁúãÂÆöÊó∂ÁºñËØëËØ¥Êòé)
#  schedule:
#    - cron: 0 20 * * 6


#ÁÇπ‚òÜStarËß¶ÂèëÂºÄÂßãÁºñËØë
#  watch:
#    types: started


env:
  REPO_URL: https://github.com/nanchuci/lede1
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/msg1500.config
  DIY_P1_SH: script/diy-part1.sh
  DIY_P2_SH: script/diy-part4.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: flase
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    name: ÁºñËØëOpenWrt-ledeÂõ∫‰ª∂
    runs-on: ubuntu-20.04

    steps:
    - name: ÂáÜÂ§áÁªìÊùü
      uses: actions/checkout@main

    - name: ÂºÄÂßãÂÆâË£ÖÁºñËØëÊâÄÈúÄÁ≥ªÁªü
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: ‰∏ãËΩΩÂõ∫‰ª∂Ê∫êÁ†Å
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    - name: Âä†ËΩΩCacheÁºìÂ≠ò
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt
    - name: Âä†ËΩΩfeedsË∑üËá™ÂÆö‰πâÊèí‰ª∂
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
    - name: clean feeds
      run: cd openwrt && ./scripts/feeds clean

    - name: ‰∏ãËΩΩfeedsË∑üÂÆâË£ÖËá™ÂÆö‰πâÊèí‰ª∂
      run: cd openwrt && ./scripts/feeds update -a

    - name: ÈÉ®ÁΩ≤feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: ÂÜçÊ¨°‰∏ãËΩΩÂÆâË£Öfeeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Âä†ËΩΩ.configËÆæÁΩÆ
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
    - name: SSHËøúÁ®ãËøûÊé•ÊúçÂä°Âô®ÈÖçÁΩÆÂõ∫‰ª∂
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    - name: ‰∏ãËΩΩËΩØ‰ª∂ÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: ÂºÄÂßãÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: Ê£ÄÊü•githubÂÇ®Â≠òÁ©∫Èó¥ÊÉÖÂÜµ
      if: (!cancelled())
      run: df -hT

    - name: ‰∏ä‰º†binÊñá‰ª∂Â§π(Âõ∫‰ª∂+ipk)Âú®githubÁ©∫Èó¥
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Êï¥ÁêÜÂõ∫‰ª∂Êñá‰ª∂Â§π
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: ‰∏ä‰º†.configÈÖçÁΩÆÊñá‰ª∂Âú®githubÁ©∫Èó¥    
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_CONFIG == 'true'
      uses: actions/upload-artifact@main
      with:
        name: config.buildinfo_${{ env.FILE_DATE }}
        path: ./config    
    
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âú®githubÁ©∫Èó¥
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: msg1500-5.15ÂÜÖÊ†∏Âõ∫‰ª∂
        path: ${{ env.FIRMWARE }}

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
    - name: ÂàõÂª∫ release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: ÁßªÈô§ÊóßÊñá‰ª∂
      uses: c-hive/gha-remove-artifacts@v1.2.0
      with:
        age: '1 day'
        skip-recent: 3

    - name: ÁßªÈô§‰ª•ÂâçÁöÑReleases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
